import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Button, notification, ConfigProvider } from 'antd';
import { EditOutlined, CheckOutlined } from '@ant-design/icons';
import '../styles/index.css';
import '../styles/ProfilePage.css';

const initialData = {
  surname: '',
  name: '',
  patronymic: '',
  birthDate: '',
  isMarried: false,
  interests: '',
  telegram: '',
  wishlist: '',
};

const ProfilePage = () => {
  const navigate = useNavigate();
  const [formData, setFormData] = useState(initialData);
  const [isSaved, setIsSaved] = useState(false);
  const [isEditing, setIsEditing] = useState(false);

  // –£—Å—Ç–∞–Ω–æ–≤–∏–º —Ö—É–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  const [api, contextHolder] = notification.useNotification();

  useEffect(() => {
    const saved = localStorage.getItem('profileData');
    if (saved) {
      setFormData(JSON.parse(saved));
      setIsSaved(true);
    }
  }, []);

  const notifySuccess = (title, description) => {
    api.success({
      message: title,
      description,
      placement: 'topRight',
      icon: <CheckOutlined style={{ color: '#A8E6CF' }} />,
      duration: 2,
    });
  };

  const handleChange = e => {
    const { name, value, type, checked } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? checked : value,
    }));
  };

  const handleSave = () => {
    localStorage.setItem('profileData', JSON.stringify(formData));

    if (!isSaved) {
      notifySuccess('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞', '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!');
    } else {
      notifySuccess('–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã', '–í–∞—à–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.');
    }

    setIsSaved(true);
    setIsEditing(false);
  };

  const handleEdit = () => setIsEditing(true);

  return (
    <ConfigProvider
      theme={{
        token: {
          colorPrimary: '#A8E6CF',
          borderRadius: 8,
          colorText: '#2A2A2A',
        },
      }}
    >
      {contextHolder}

      <div className="secret-santa-container">
        <ul className="snowflakes" aria-hidden="true">
          {Array.from({ length: 30 }).map((_, i) => (
            <li key={i} className="snowflake">‚ùÖ</li>
          ))}
        </ul>
        <ul className="twinkles" aria-hidden="true">
          {Array.from({ length: 20 }).map((_, i) => (
            <li key={i} className="twinkle">‚ú®</li>
          ))}
        </ul>

        <header className="main-header">
          <h1 className="header-title">üéÖ –¢–∞–π–Ω—ã–π –°–∞–Ω—Ç–∞ üéÅ</h1>
          <button className="header-btn" onClick={() => navigate('/')}>
            üè† –ì–ª–∞–≤–Ω–∞—è
          </button>
        </header>

        <main className="profile-wrapper">
          <div className="profile-header">
            <h2>–ê–Ω–∫–µ—Ç–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞</h2>
            {isSaved && !isEditing && (
              <Button
                type="default"
                className="edit-btn"
                icon={<EditOutlined />}
                onClick={handleEdit}
              >
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </Button>
            )}
          </div>

          <form className={`profile-form ${isSaved && !isEditing ? 'disabled' : ''}`}>
            <label>
              –§–∞–º–∏–ª–∏—è
              <input
                type="text"
                name="surname"
                value={formData.surname}
                onChange={handleChange}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é"
                disabled={isSaved && !isEditing}
              />
            </label>
            <label>
              –ò–º—è
              <input
                type="text"
                name="name"
                value={formData.name}
                onChange={handleChange}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                disabled={isSaved && !isEditing}
              />
            </label>
            <label>
              –û—Ç—á–µ—Å—Ç–≤–æ
              <input
                type="text"
                name="patronymic"
                value={formData.patronymic}
                onChange={handleChange}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –æ—Ç—á–µ—Å—Ç–≤–æ"
                disabled={isSaved && !isEditing}
              />
            </label>
            <label>
              –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è
              <input
                type="date"
                name="birthDate"
                value={formData.birthDate}
                onChange={handleChange}
                disabled={isSaved && !isEditing}
              />
            </label>
            <label className="checkbox-label">
              <span>–ó–∞–º—É–∂–µ–º/–ñ–µ–Ω–∞—Ç</span>
              <input
                type="checkbox"
                name="isMarried"
                checked={formData.isMarried}
                onChange={handleChange}
                disabled={isSaved && !isEditing}
              />
            </label>
            <label>
              –ù–∏–∫ –≤ Telegram
              <input
                type="text"
                name="telegram"
                value={formData.telegram}
                onChange={handleChange}
                placeholder="@nickname"
                disabled={isSaved && !isEditing}
              />
            </label>
            <label>
              –ò–Ω—Ç–µ—Ä–µ—Å—ã
              <textarea
                name="interests"
                value={formData.interests}
                onChange={handleChange}
                placeholder="–ß–µ–º —É–≤–ª–µ–∫–∞–µ—Ç–µ—Å—å?"
                disabled={isSaved && !isEditing}
              />
            </label>
            <label>
              –í–∏—à–ª–∏—Å—Ç (–ø–æ–∂–µ–ª–∞–Ω–∏—è –∫ –ø–æ–¥–∞—Ä–∫—É)
              <textarea
                name="wishlist"
                value={formData.wishlist}
                onChange={handleChange}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: —Å–≤–µ—á–∏, —à–æ–∫–æ–ª–∞–¥..."
                disabled={isSaved && !isEditing}
              />
            </label>

            {!isSaved || isEditing ? (
              <Button
                type="primary"
                className="save-btn"
                onClick={handleSave}
              >
                üì© –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
              </Button>
            ) : null}
          </form>
        </main>

        <footer className="footer">
          <div className="santa-run">
            <img src="/images/santa-reindeer.gif" alt="Santa on sleigh" />
          </div>
          <p>¬© 2025 –¢–∞–π–Ω—ã–π –°–∞–Ω—Ç–∞. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
        </footer>
      </div>
    </ConfigProvider>
  );
};

export default ProfilePage;
